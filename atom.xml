<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Lorne的十九创作坊</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://19czf.com/"/>
  <updated>2019-11-02T04:59:20.984Z</updated>
  <id>http://19czf.com/</id>
  
  <author>
    <name>Lorne</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>一步步写c++ server程序（1）---TCP服务端</title>
    <link href="http://19czf.com/2019/11/02/%E4%B8%80%E6%AD%A5%E6%AD%A5%E5%86%99c-server%E7%A8%8B%E5%BA%8F%EF%BC%881%EF%BC%89-TCP%E6%9C%8D%E5%8A%A1%E7%AB%AF/"/>
    <id>http://19czf.com/2019/11/02/一步步写c-server程序（1）-TCP服务端/</id>
    <published>2019-11-02T03:13:45.000Z</published>
    <updated>2019-11-02T04:59:20.984Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>整个系列的文章目的是写一个MessageServer，用于进程间通信的。并制定一个网络协议可以不同设备之间不同进程之间通信。协议暂时命名为N19协议。</p><h2 id="一个简单的TCPServer"><a href="#一个简单的TCPServer" class="headerlink" title="一个简单的TCPServer"></a>一个简单的TCPServer</h2><p>先写一个简单的TCP server，用Telnet作为客户端测试<br>TCPServer.cpp:<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;errno.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;sys/types.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;sys/socket.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;netinet/in.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;arpa/inet.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;unistd.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXLINE 1024</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SERVER_PORT 8888</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span>  ret = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">int</span>  port = SERVER_PORT; <span class="comment">//默认端口</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>( argc == <span class="number">2</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        port = atoi(argv[<span class="number">1</span>]);<span class="comment">//可以配置第一个参数为端口</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Server port [%d]\n"</span>, port);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span>  listen_fd = <span class="number">0</span>;</span><br><span class="line">    listen_fd = socket(AF_INET, SOCK_STREAM, <span class="number">0</span>); <span class="comment">//TCP</span></span><br><span class="line">    <span class="keyword">if</span>(listen_fd &lt; <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"listen_fd = %d error:[%s]\n"</span>, listen_fd, strerror(errno));</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">sockaddr_in</span>  <span class="title">server_addr</span>;</span></span><br><span class="line">    <span class="built_in">memset</span>(&amp;server_addr, <span class="number">0</span>, <span class="keyword">sizeof</span>(struct sockaddr_in));</span><br><span class="line">    server_addr.sin_family = AF_INET;</span><br><span class="line">    server_addr.sin_addr.s_addr = htonl(INADDR_ANY);</span><br><span class="line">    server_addr.sin_port = htons(port);</span><br><span class="line">    ret = bind(listen_fd, (struct sockaddr *)&amp;server_addr, <span class="keyword">sizeof</span>(struct sockaddr_in));</span><br><span class="line">    <span class="keyword">if</span>(ret &lt; <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"ret = %d error:[%s]\n"</span>, ret, strerror(errno));</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    ret = listen(listen_fd, SOMAXCONN);</span><br><span class="line">    <span class="keyword">if</span>(ret &lt; <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"ret = %d error:[%s]\n"</span>, ret, strerror(errno));</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> connect_fd = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">socklen_t</span>  addrlen = <span class="number">0</span>;</span><br><span class="line">        <span class="class"><span class="keyword">struct</span> <span class="title">sockaddr_in</span> <span class="title">accept_addr</span>;</span></span><br><span class="line">        connect_fd = accept(listen_fd, (struct sockaddr *) &amp;accept_addr, &amp;addrlen);</span><br><span class="line">        <span class="keyword">if</span>( connect_fd &lt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"accept error:[%s]\n"</span>, strerror(errno));</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">char</span> send_buff[MAXLINE] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">        <span class="built_in">snprintf</span>(send_buff, MAXLINE, <span class="string">"welcome,your address is [%s:%d]\n"</span>, inet_ntoa(accept_addr.sin_addr), accept_addr.sin_port);</span><br><span class="line">        ret = write(connect_fd, send_buff, <span class="built_in">strlen</span>(send_buff));</span><br><span class="line">        <span class="keyword">if</span>( ret &lt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"send error: %s\n"</span>, strerror(errno));</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(;;)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">char</span> recv_buff[MAXLINE] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">            <span class="keyword">int</span>  buff_len = <span class="number">0</span>;</span><br><span class="line">            buff_len = read(connect_fd, recv_buff, MAXLINE);</span><br><span class="line">            recv_buff[buff_len] = <span class="string">'\0'</span>;</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">strstr</span>(recv_buff, <span class="string">"bye"</span>))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">snprintf</span>(send_buff, MAXLINE, <span class="string">"you said:%s"</span>, recv_buff);</span><br><span class="line">            ret = write(connect_fd, send_buff, <span class="built_in">strlen</span>(send_buff));</span><br><span class="line">            <span class="keyword">if</span>( ret &lt; <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"send error: %s\n"</span>, strerror(errno));</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        close(connect_fd);</span><br><span class="line">    &#125;</span><br><span class="line">    close(listen_fd);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>编译运行：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">gcc -o TCPServer TCPServer.cpp</span><br><span class="line">./TCPServer</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">lorne@DESKTOP-06O9LMV:/mnt/c/Users/Lorne$ telnet 127.0.0.1 8888</span><br><span class="line">Trying 127.0.0.1...</span><br><span class="line">Connected to 127.0.0.1.</span><br><span class="line">Escape character is '^]'.</span><br><span class="line">welcome,your address is [153.127.0.0:6210]</span><br><span class="line">asda</span><br><span class="line">you said:asda</span><br><span class="line">asd</span><br><span class="line">you said:asd</span><br><span class="line">bye bye</span><br><span class="line">Connection closed by foreign host.</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;整个系列的文章目的是写一个MessageServer，用于进程间通信的。并制定一个网络协议可以不同设备之间不同进程之间通信。协议暂时命名为N
      
    
    </summary>
    
      <category term="技术笔记" scheme="http://19czf.com/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="TCP" scheme="http://19czf.com/tags/TCP/"/>
    
      <category term="server" scheme="http://19czf.com/tags/server/"/>
    
      <category term="网络编程" scheme="http://19czf.com/tags/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/"/>
    
      <category term="c++" scheme="http://19czf.com/tags/c/"/>
    
  </entry>
  
  <entry>
    <title>hexo常用命令</title>
    <link href="http://19czf.com/2019/11/02/hexo%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <id>http://19czf.com/2019/11/02/hexo常用命令/</id>
    <published>2019-11-02T02:08:58.000Z</published>
    <updated>2019-11-02T02:43:41.237Z</updated>
    
    <content type="html"><![CDATA[<p>记录一下hexo发表文章的过程，免得每次发表文章的时候都打开官网。</p><h3 id="新建文章"><a href="#新建文章" class="headerlink" title="新建文章"></a>新建文章</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new "post title with whitespace"</span><br></pre></td></tr></table></figure><table><thead><tr><th>选项</th><th>描述</th></tr></thead><tbody><tr><td>-p</td><td>自定义新文章的路径</td></tr><tr><td>-r</td><td>如果存在同名文章，将其替换</td></tr><tr><td>-s</td><td>文章的 Slug，作为新文章的文件名和发布后的 URL</td></tr></tbody></table><h3 id="生成文件"><a href="#生成文件" class="headerlink" title="生成文件"></a>生成文件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure><h3 id="本地预览"><a href="#本地预览" class="headerlink" title="本地预览"></a>本地预览</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><table><thead><tr><th>选项</th><th>描述</th></tr></thead><tbody><tr><td>-p, –port</td><td>重设端口</td></tr><tr><td>-s, –static</td><td>只使用静态文件</td></tr><tr><td>-l, –log</td><td>启动日记记录，使用覆盖记录格式</td></tr></tbody></table><h3 id="发布"><a href="#发布" class="headerlink" title="发布"></a>发布</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>提示错误：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ERROR Deployer not found: git</span><br></pre></td></tr></table></figure><p>解决办法：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo npm install --save hexo-deployer-git</span><br></pre></td></tr></table></figure><h3 id="清除缓存"><a href="#清除缓存" class="headerlink" title="清除缓存"></a>清除缓存</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;记录一下hexo发表文章的过程，免得每次发表文章的时候都打开官网。&lt;/p&gt;
&lt;h3 id=&quot;新建文章&quot;&gt;&lt;a href=&quot;#新建文章&quot; class=&quot;headerlink&quot; title=&quot;新建文章&quot;&gt;&lt;/a&gt;新建文章&lt;/h3&gt;&lt;figure class=&quot;highlight
      
    
    </summary>
    
      <category term="常用工具" scheme="http://19czf.com/categories/%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="工具" scheme="http://19czf.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
      <category term="HEXO" scheme="http://19czf.com/tags/HEXO/"/>
    
  </entry>
  
  <entry>
    <title>GIT的常用命令记录</title>
    <link href="http://19czf.com/2019/10/13/GIT%E7%9A%84%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E8%AE%B0%E5%BD%95/"/>
    <id>http://19czf.com/2019/10/13/GIT的常用命令记录/</id>
    <published>2019-10-13T08:58:01.000Z</published>
    <updated>2019-11-02T02:12:38.892Z</updated>
    
    <content type="html"><![CDATA[<h4 id="设置git用户信息，会在提交记录里面显示，跟授权账号密码没有关系"><a href="#设置git用户信息，会在提交记录里面显示，跟授权账号密码没有关系" class="headerlink" title="设置git用户信息，会在提交记录里面显示，跟授权账号密码没有关系"></a>设置git用户信息，会在提交记录里面显示，跟授权账号密码没有关系</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name &quot;Your Name Comes Here&quot;</span><br><span class="line">$ git config --global user.email &quot;you@yourdomain.example.com&quot;</span><br></pre></td></tr></table></figure><h4 id="创建仓库-就得到-git-一个空的仓库-那么当前路径为工作树"><a href="#创建仓库-就得到-git-一个空的仓库-那么当前路径为工作树" class="headerlink" title="创建仓库 就得到.git  一个空的仓库  那么当前路径为工作树"></a>创建仓库 就得到.git  一个空的仓库  那么当前路径为工作树</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git init</span><br></pre></td></tr></table></figure><h4 id="增加忽略文件"><a href="#增加忽略文件" class="headerlink" title="增加忽略文件"></a>增加忽略文件</h4><p>需要忽略比如编译产生的中间文件、本地环境配置问价等<br>把忽略的文件名加到  .gitignore，这样git add . 就不会所有的都添加了<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;xxx.o&quot; &gt; .gitignore</span><br></pre></td></tr></table></figure></p><h4 id="提交"><a href="#提交" class="headerlink" title="提交"></a>提交</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1、git add . 或者跟文件名</span><br><span class="line">2、git commit -m “xxxx” or  git commit再填写信息</span><br><span class="line">3、git commit --amend修改提交信息</span><br></pre></td></tr></table></figure><h4 id="推送到远程"><a href="#推送到远程" class="headerlink" title="推送到远程"></a>推送到远程</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin master</span><br></pre></td></tr></table></figure><h4 id="工程克隆"><a href="#工程克隆" class="headerlink" title="工程克隆"></a>工程克隆</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ cp -R $WORK/.git /tmp/m2doc.git</span><br><span class="line">$ cd /tmp</span><br><span class="line">$ git clone m2doc.git m2doc-copy</span><br></pre></td></tr></table></figure><p>m2doc-copy 里面除了包含,git 之外还有文件</p><h4 id="拉取远程代码"><a href="#拉取远程代码" class="headerlink" title="拉取远程代码"></a>拉取远程代码</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git clone http://xxxxxx.git -b 分支名（不写默认master）</span><br></pre></td></tr></table></figure><h4 id="查看历史记录"><a href="#查看历史记录" class="headerlink" title="查看历史记录"></a>查看历史记录</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">git log 查看历史版本</span><br><span class="line">git show eef5e798e4f102fe76398fcd21da300159f161c 一般只用钱几个字符即可 如git show eef5e7</span><br><span class="line">git show HEAD显示当前分枝的细节</span><br><span class="line">$ git show HEAD^ # 查看 HEAD 的父版本更新细节</span><br><span class="line">$ git show HEAD^^ # 查看 HEAD 的祖父版本更新细节</span><br><span class="line">$ git show HEAD~4 # 查看 HEAD 的祖父之祖父的版本更新细节</span><br></pre></td></tr></table></figure><h4 id="提交代码相关操作"><a href="#提交代码相关操作" class="headerlink" title="提交代码相关操作"></a>提交代码相关操作</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">git status 查看修改的内容</span><br><span class="line">git checkout  test1.c 恢复文件   如果已经git add如那就恢复到add之前，（或者commit）</span><br><span class="line">git status 先看一下add 中的文件 </span><br><span class="line">$ git add 改动的文件</span><br><span class="line">$ git commit</span><br><span class="line">$ git pull</span><br><span class="line">$ git push</span><br></pre></td></tr></table></figure><h4 id="查看远程库的信息"><a href="#查看远程库的信息" class="headerlink" title="查看远程库的信息"></a>查看远程库的信息</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote -v</span><br></pre></td></tr></table></figure><h4 id="分支操作"><a href="#分支操作" class="headerlink" title="分支操作"></a>分支操作</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">git brunch xxx 创建XXX分枝</span><br><span class="line">git brunch 查看分支</span><br><span class="line">git checkout XXX 切换分支</span><br><span class="line">git checkout  master 切换主分支</span><br><span class="line">git  merge XXX 合并分支</span><br><span class="line">git brunch -d xxx 删除分支</span><br></pre></td></tr></table></figure><h4 id="撤回push"><a href="#撤回push" class="headerlink" title="撤回push"></a>撤回push</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git reset --hard 63e386a81741f9261cdcfc353b4822a11cc543f8</span><br><span class="line">git push origin master --force</span><br></pre></td></tr></table></figure><h4 id="增加远程仓库"><a href="#增加远程仓库" class="headerlink" title="增加远程仓库"></a>增加远程仓库</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add 仓库名  路径链接</span><br></pre></td></tr></table></figure><h4 id="关于git-reset"><a href="#关于git-reset" class="headerlink" title="关于git reset"></a>关于git reset</h4><p>reset用的不好，很容易出问题。正常情况我是能不用就不用的<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git reset HEAD 如果后面什么都不跟的话 就是上一次add 里面的全部撤销了 ，不会恢复文件内容，只是撤销add</span><br><span class="line">git reset HEAD XXX/XXX/XXX.java 就是对某个文件进行撤销了，不会恢复文件内容 </span><br><span class="line">git reset HEAD test1.c ，不会恢复文件内容</span><br><span class="line">git reset 指定版本  不会改变文件内容，恢复到add之前的状态</span><br><span class="line">git reset --soft 指定版本  不会改变文件内容恢复到add 之后的状态</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;设置git用户信息，会在提交记录里面显示，跟授权账号密码没有关系&quot;&gt;&lt;a href=&quot;#设置git用户信息，会在提交记录里面显示，跟授权账号密码没有关系&quot; class=&quot;headerlink&quot; title=&quot;设置git用户信息，会在提交记录里面显示，跟授权账号密码
      
    
    </summary>
    
      <category term="常用工具" scheme="http://19czf.com/categories/%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="GIT" scheme="http://19czf.com/tags/GIT/"/>
    
      <category term="工具" scheme="http://19czf.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
</feed>
